/*
 * The Flex Grid (v1.5.1) is a lightweight responsive CSS grid using flexbox. Because we can!
 * http://jeroenoomsnl.github.io/the-flex-grid/
 */

//
// Config
//
$theflexgrid-gutter: 1em !default;
$theflexgrid-maxwidth: 960px !default;
$theflexgrid-silent-only: false !default;

// breakpoints
$theflexgrid-breakpoint-small: '(max-width: 767px)' !default;
$theflexgrid-breakpoint-medium: '(min-width: 768px) and (max-width: 959px)' !default;
$theflexgrid-breakpoint-large: '(min-width: 960px)' !default;

// import dependencies
@import 'helpers/decimal-floor';

//
// Viewport mixin
//
@mixin viewport($viewport) {
    @if $viewport == default {
        $viewport: '';
    } @else {
        $viewport: -#{$viewport};
    }

    @for $i from 1 through 12 {
        $percent: 100%/12 * $i;

        .col#{$viewport}-#{$i} {
            flex-basis: decimal-floor($percent, 10);
            max-width: decimal-floor($percent, 10);
        }
    }

    .col#{$viewport}-top {
        align-self: flex-start;
    }

    .col#{$viewport}-bottom {
        align-self: flex-end;
    }

    .col#{$viewport}-middle {
        align-self: center;
    }

    .row#{$viewport}-left {
        justify-content: flex-start;
    }
    .row#{$viewport}-right {
        justify-content: flex-end;
    }
    .row#{$viewport}-center {
        justify-content: center;
    }
    .row#{$viewport}-space-between {
        justify-content: space-between;
    }
    .row#{$viewport}-space-around {
        justify-content: space-around;
    }

    .row#{$viewport}-reverse {
        flex-direction: row-reverse;
    }

    .row#{$viewport}-equal > * {
        display: flex;

        & > * {
            width: 100%;
        }
    }

    .row#{$viewport}-top {
        align-items: flex-start;
    }
    .row#{$viewport}-middle {
        align-items: center;
    }
    .row#{$viewport}-bottom {
        align-items: flex-end;
    }

    .hide#{$viewport} {
        display: none;
    }
}

/* Generic grid styles */
%grid {
    margin: 0 auto;
    overflow: hidden;

    &.full-height {
        display: flex;
        height: 100%;
        flex-direction: column;

        & > .row {
            flex-grow: 1;
        }
    }
}

%row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -#{$theflexgrid-gutter/2} 0 -#{$theflexgrid-gutter/2};

    & > * {
        box-sizing: border-box;
        padding: 0 $theflexgrid-gutter/2 $theflexgrid-gutter;
        flex-basis: 100%;
    }

    &:last-child {
        margin-bottom: -#{$theflexgrid-gutter};
    }
}

%gutterless {
    & > .row {
        margin: 0;

        & > * {
            padding: 0;
        }

        &:last-child {
            margin-bottom: 0;
        }
    }
}

%col {
    flex: 1 0 auto;
}

@if $theflexgrid-silent-only == false {
    .grid {
        @extend %grid;
    }

    .gutterless {
        @extend %gutterless;
    }

    .row {
        @extend %row;
    }

    .col {
        @extend %col;
    }

    /* Default view */
    @include viewport(default);

    /* Small viewport (mobile) */
    @media #{$theflexgrid-breakpoint-small} {
        @include viewport(small);
    }

    /* Medium viewport (tablets) */
    @media #{$theflexgrid-breakpoint-medium} {
        @include viewport(medium);
    }

    /* Large viewport (desktop) */
    @media #{$theflexgrid-breakpoint-large} {
        @include viewport(large);
    }
}
